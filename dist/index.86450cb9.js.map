{"mappings":"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","sources":["src/flipdown.js"],"sourcesContent":["/**\r\n * @name FlipDown\r\n * @description Flip styled countdown clock\r\n * @author Peter Butcher (PButcher) <pbutcher93[at]gmail[dot]com>\r\n * @param {number} uts - Time to count down to as unix timestamp\r\n * @param {string} el - DOM element to attach FlipDown to\r\n * @param {object} opt - Optional configuration settings\r\n **/\r\nclass FlipDown {\r\n    constructor(uts, el = \"flipdown\", opt = {}) {\r\n        // If uts is not specified\r\n        if (typeof uts !== \"number\") {\r\n            throw new Error(\r\n                `FlipDown: Constructor expected unix timestamp, got ${typeof uts} instead.`\r\n            );\r\n        }\r\n\r\n        // If opt is specified, but not el\r\n        if (typeof el === \"object\") {\r\n            opt = el;\r\n            el = \"flipdown\";\r\n        }\r\n\r\n        // FlipDown version\r\n        this.version = \"0.3.2\";\r\n\r\n        // Initialised?\r\n        this.initialised = false;\r\n\r\n        // Time at instantiation in seconds\r\n        this.now = this._getTime();\r\n\r\n        // UTS to count down to\r\n        this.epoch = uts;\r\n\r\n        // UTS passed to FlipDown is in the past\r\n        this.countdownEnded = false;\r\n\r\n        // User defined callback for countdown end\r\n        this.hasEndedCallback = null;\r\n\r\n        // FlipDown DOM element\r\n        this.element = document.getElementById(el);\r\n\r\n        // Rotor DOM elements\r\n        this.rotors = [];\r\n        this.rotorLeafFront = [];\r\n        this.rotorLeafRear = [];\r\n        this.rotorTops = [];\r\n        this.rotorBottoms = [];\r\n\r\n        // Interval\r\n        this.countdown = null;\r\n\r\n        // Number of days remaining\r\n        this.daysRemaining = 0;\r\n\r\n        // Clock values as numbers\r\n        this.clockValues = {};\r\n\r\n        // Clock values as strings\r\n        this.clockStrings = {};\r\n\r\n        // Clock values as array\r\n        this.clockValuesAsString = [];\r\n        this.prevClockValuesAsString = [];\r\n\r\n        // Parse options\r\n        this.opts = this._parseOptions(opt);\r\n\r\n        // Set options\r\n        this._setOptions();\r\n\r\n        // Print Version\r\n        console.log(`FlipDown ${this.version} (Theme: ${this.opts.theme})`);\r\n    }\r\n\r\n    /**\r\n     * @name start\r\n     * @description Start the countdown\r\n     * @author PButcher\r\n     **/\r\n    start() {\r\n        // Initialise the clock\r\n        if (!this.initialised) this._init();\r\n\r\n        // Set up the countdown interval\r\n        this.countdown = setInterval(this._tick.bind(this), 1000);\r\n\r\n        // Chainable\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @name ifEnded\r\n     * @description Call a function once the countdown ends\r\n     * @author PButcher\r\n     * @param {function} cb - Callback\r\n     **/\r\n    ifEnded(cb) {\r\n        this.hasEndedCallback = function () {\r\n            cb();\r\n            this.hasEndedCallback = null;\r\n        };\r\n\r\n        // Chainable\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @name _getTime\r\n     * @description Get the time in seconds (unix timestamp)\r\n     * @author PButcher\r\n     **/\r\n    _getTime() {\r\n        return new Date().getTime() / 1000;\r\n    }\r\n\r\n    /**\r\n     * @name _hasCountdownEnded\r\n     * @description Has the countdown ended?\r\n     * @author PButcher\r\n     **/\r\n    _hasCountdownEnded() {\r\n        // Countdown has ended\r\n        if (this.epoch - this.now < 0) {\r\n            this.countdownEnded = true;\r\n\r\n            // Fire the ifEnded callback once if it was set\r\n            if (this.hasEndedCallback != null) {\r\n                // Call ifEnded callback\r\n                this.hasEndedCallback();\r\n\r\n                // Remove the callback\r\n                this.hasEndedCallback = null;\r\n            }\r\n\r\n            return true;\r\n\r\n            // Countdown has not ended\r\n        } else {\r\n            this.countdownEnded = false;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name _parseOptions\r\n     * @description Parse any passed options\r\n     * @param {object} opt - Optional configuration settings\r\n     * @author PButcher\r\n     **/\r\n    _parseOptions(opt) {\r\n        let headings = [\"Days\", \"Hours\", \"Minutes\", \"Seconds\"];\r\n        if (opt.headings && opt.headings.length === 4) {\r\n            headings = opt.headings;\r\n        }\r\n        return {\r\n            // Theme\r\n            theme: opt.hasOwnProperty(\"theme\") ? opt.theme : \"dark\",\r\n            headings,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @name _setOptions\r\n     * @description Set optional configuration settings\r\n     * @author PButcher\r\n     **/\r\n    _setOptions() {\r\n        // Apply theme\r\n        this.element.classList.add(`flipdown__theme-${this.opts.theme}`);\r\n    }\r\n\r\n    /**\r\n     * @name _init\r\n     * @description Initialise the countdown\r\n     * @author PButcher\r\n     **/\r\n    _init() {\r\n        this.initialised = true;\r\n\r\n        // Check whether countdown has ended and calculate how many digits the day counter needs\r\n        if (this._hasCountdownEnded()) {\r\n            this.daysremaining = 0;\r\n        } else {\r\n            this.daysremaining = Math.floor(\r\n                (this.epoch - this.now) / 86400\r\n            ).toString().length;\r\n        }\r\n        var dayRotorCount = this.daysremaining <= 2 ? 2 : this.daysremaining;\r\n\r\n        // Create and store rotors\r\n        for (var i = 0; i < dayRotorCount + 6; i++) {\r\n            this.rotors.push(this._createRotor(0));\r\n        }\r\n\r\n        // Create day rotor group\r\n        var dayRotors = [];\r\n        for (var i = 0; i < dayRotorCount; i++) {\r\n            dayRotors.push(this.rotors[i]);\r\n        }\r\n        this.element.appendChild(this._createRotorGroup(dayRotors, 0));\r\n\r\n        // Create other rotor groups\r\n        var count = dayRotorCount;\r\n        for (var i = 0; i < 3; i++) {\r\n            var otherRotors = [];\r\n            for (var j = 0; j < 2; j++) {\r\n                otherRotors.push(this.rotors[count]);\r\n                count++;\r\n            }\r\n            this.element.appendChild(this._createRotorGroup(otherRotors, i + 1));\r\n        }\r\n\r\n        // Store and convert rotor nodelists to arrays\r\n        this.rotorLeafFront = Array.prototype.slice.call(\r\n            this.element.getElementsByClassName(\"rotor-leaf-front\")\r\n        );\r\n        this.rotorLeafRear = Array.prototype.slice.call(\r\n            this.element.getElementsByClassName(\"rotor-leaf-rear\")\r\n        );\r\n        this.rotorTop = Array.prototype.slice.call(\r\n            this.element.getElementsByClassName(\"rotor-top\")\r\n        );\r\n        this.rotorBottom = Array.prototype.slice.call(\r\n            this.element.getElementsByClassName(\"rotor-bottom\")\r\n        );\r\n\r\n        // Set initial values;\r\n        this._tick();\r\n        this._updateClockValues(true);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @name _createRotorGroup\r\n     * @description Add rotors to the DOM\r\n     * @author PButcher\r\n     * @param {array} rotors - A set of rotors\r\n     **/\r\n    _createRotorGroup(rotors, rotorIndex) {\r\n        var rotorGroup = document.createElement(\"div\");\r\n        rotorGroup.className = \"rotor-group\";\r\n        var dayRotorGroupHeading = document.createElement(\"div\");\r\n        dayRotorGroupHeading.className = \"rotor-group-heading\";\r\n        dayRotorGroupHeading.setAttribute(\r\n            \"data-before\",\r\n            this.opts.headings[rotorIndex]\r\n        );\r\n        rotorGroup.appendChild(dayRotorGroupHeading);\r\n        appendChildren(rotorGroup, rotors);\r\n        return rotorGroup;\r\n    }\r\n\r\n    /**\r\n     * @name _createRotor\r\n     * @description Create a rotor DOM element\r\n     * @author PButcher\r\n     * @param {number} v - Initial rotor value\r\n     **/\r\n    _createRotor(v = 0) {\r\n        var rotor = document.createElement(\"div\");\r\n        var rotorLeaf = document.createElement(\"div\");\r\n        var rotorLeafRear = document.createElement(\"figure\");\r\n        var rotorLeafFront = document.createElement(\"figure\");\r\n        var rotorTop = document.createElement(\"div\");\r\n        var rotorBottom = document.createElement(\"div\");\r\n        rotor.className = \"rotor\";\r\n        rotorLeaf.className = \"rotor-leaf\";\r\n        rotorLeafRear.className = \"rotor-leaf-rear\";\r\n        rotorLeafFront.className = \"rotor-leaf-front\";\r\n        rotorTop.className = \"rotor-top\";\r\n        rotorBottom.className = \"rotor-bottom\";\r\n        rotorLeafRear.textContent = v;\r\n        rotorTop.textContent = v;\r\n        rotorBottom.textContent = v;\r\n        appendChildren(rotor, [rotorLeaf, rotorTop, rotorBottom]);\r\n        appendChildren(rotorLeaf, [rotorLeafRear, rotorLeafFront]);\r\n        return rotor;\r\n    }\r\n\r\n    /**\r\n     * @name _tick\r\n     * @description Calculate current tick\r\n     * @author PButcher\r\n     **/\r\n    _tick() {\r\n        // Get time now\r\n        this.now = this._getTime();\r\n\r\n        // Between now and epoch\r\n        var diff = this.epoch - this.now <= 0 ? 0 : this.epoch - this.now;\r\n\r\n        // Days remaining\r\n        this.clockValues.d = Math.floor(diff / 86400);\r\n        diff -= this.clockValues.d * 86400;\r\n\r\n        // Hours remaining\r\n        this.clockValues.h = Math.floor(diff / 3600);\r\n        diff -= this.clockValues.h * 3600;\r\n\r\n        // Minutes remaining\r\n        this.clockValues.m = Math.floor(diff / 60);\r\n        diff -= this.clockValues.m * 60;\r\n\r\n        // Seconds remaining\r\n        this.clockValues.s = Math.floor(diff);\r\n\r\n        // Update clock values\r\n        this._updateClockValues();\r\n\r\n        // Has the countdown ended?\r\n        this._hasCountdownEnded();\r\n    }\r\n\r\n    /**\r\n     * @name _updateClockValues\r\n     * @description Update the clock face values\r\n     * @author PButcher\r\n     * @param {boolean} init - True if calling for initialisation\r\n     **/\r\n    _updateClockValues(init = false) {\r\n        // Build clock value strings\r\n        this.clockStrings.d = pad(this.clockValues.d, 2);\r\n        this.clockStrings.h = pad(this.clockValues.h, 2);\r\n        this.clockStrings.m = pad(this.clockValues.m, 2);\r\n        this.clockStrings.s = pad(this.clockValues.s, 2);\r\n\r\n        // Concat clock value strings\r\n        this.clockValuesAsString = (\r\n            this.clockStrings.d +\r\n            this.clockStrings.h +\r\n            this.clockStrings.m +\r\n            this.clockStrings.s\r\n        ).split(\"\");\r\n\r\n        // Update rotor values\r\n        // Note that the faces which are initially visible are:\r\n        // - rotorLeafFront (top half of current rotor)\r\n        // - rotorBottom (bottom half of current rotor)\r\n        // Note that the faces which are initially hidden are:\r\n        // - rotorTop (top half of next rotor)\r\n        // - rotorLeafRear (bottom half of next rotor)\r\n        this.rotorLeafFront.forEach((el, i) => {\r\n            el.textContent = this.prevClockValuesAsString[i];\r\n        });\r\n\r\n        this.rotorBottom.forEach((el, i) => {\r\n            el.textContent = this.prevClockValuesAsString[i];\r\n        });\r\n\r\n        function rotorTopFlip() {\r\n            this.rotorTop.forEach((el, i) => {\r\n                if (el.textContent != this.clockValuesAsString[i]) {\r\n                    el.textContent = this.clockValuesAsString[i];\r\n                }\r\n            });\r\n        }\r\n\r\n        function rotorLeafRearFlip() {\r\n            this.rotorLeafRear.forEach((el, i) => {\r\n                if (el.textContent != this.clockValuesAsString[i]) {\r\n                    el.textContent = this.clockValuesAsString[i];\r\n                    el.parentElement.classList.add(\"flipped\");\r\n                    var flip = setInterval(\r\n                        function () {\r\n                            el.parentElement.classList.remove(\"flipped\");\r\n                            clearInterval(flip);\r\n                        }.bind(this),\r\n                        500\r\n                    );\r\n                }\r\n            });\r\n        }\r\n\r\n        // Init\r\n        if (!init) {\r\n            setTimeout(rotorTopFlip.bind(this), 500);\r\n            setTimeout(rotorLeafRearFlip.bind(this), 500);\r\n        } else {\r\n            rotorTopFlip.call(this);\r\n            rotorLeafRearFlip.call(this);\r\n        }\r\n\r\n        // Save a copy of clock values for next tick\r\n        this.prevClockValuesAsString = this.clockValuesAsString;\r\n    }\r\n}\r\n\r\n/**\r\n * @name pad\r\n * @description Prefix a number with zeroes\r\n * @author PButcher\r\n * @param {string} n - Number to pad\r\n * @param {number} len - Desired length of number\r\n **/\r\nfunction pad(n, len) {\r\n    n = n.toString();\r\n    return n.length < len ? pad(\"0\" + n, len) : n;\r\n}\r\n\r\n/**\r\n * @name appendChildren\r\n * @description Add multiple children to an element\r\n * @author PButcher\r\n * @param {object} parent - Parent\r\n **/\r\nfunction appendChildren(parent, children) {\r\n    children.forEach((el) => {\r\n        parent.appendChild(el);\r\n    });\r\n}\r\n"],"names":[],"version":3,"file":"index.86450cb9.js.map","sourceRoot":"/__parcel_source_root/"}